#!/usr/bin/perl
use strict;
use warnings;

my ($MODE_PSTATE, $MODE_CPUFREQ) = ("PSTATE", "CPUFREQ");

my $PSTATE_DEV = "/sys/devices/system/cpu/intel_pstate/max_perf_pct";
my $CPUFREQ_DEV = "/sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq";

my $usage = "Usage:
  $0 -h|--help
    print this message

  $0
  $0 -g|--get
    print max cpu

    if $PSTATE_DEV exists:
      cpu-set-pstate -g max
    if $CPUFREQ_DEV exists:
      cpu-set-cpufreq --get-max-pct
    otherwise fail

  $0 PCT
    PCT is a non-negative integer, optionally followed by '%'
    if $PSTATE_DEV exists:
      cpu-set-pstate 0% <PCT>%
    if $CPUFREQ_DEV exists:
      cpu-set-cpufreq --ondemand 0% <PCT>%
";

sub main(@){
  die $usage if @_ > 0 and $_[0] =~ /^(-h|--help)$/;

  my $mode = undef;
  if(-e $PSTATE_DEV){
    $mode = $MODE_PSTATE;
  }elsif(-e $CPUFREQ_DEV){
    $mode = $MODE_CPUFREQ;
  }else{
    die "could not find pstate or cpufreq devices:\n$PSTATE_DEV\n$CPUFREQ_DEV\n";
  }

  if(@_ == 0 or $_[0] =~ /^(-g|--get)$/){
    if($mode eq $MODE_PSTATE){
      exec "cpu-set-pstate", "-g", "max";
    }elsif($mode eq $MODE_CPUFREQ){
      exec "cpu-set-cpufreq", "--get-max-pct";
    }
  }elsif(@_ == 1 and $_[0] =~ /^(\d+)%?$/){
    my $pct = $1;
    if($mode eq $MODE_PSTATE){
      exec "cpu-set-pstate", "0%", "$pct%";
    }elsif($mode eq $MODE_CPUFREQ){
      exec "cpu-set-cpufreq", "--ondemand", "0%", "$pct%";
    }
  }else{
    die $usage;
  }
}

&main(@ARGV);
