#!/usr/bin/perl
use strict;
use warnings;

my $successCmd = "alarm -s success";
my $failureCmd = "alarm -s failure";

my $execName = "taffybar-linux-x86_64";

my $taffybarUserExec = "$ENV{HOME}/.cache/taffybar/$execName";

my $usage = "Usage:
  $0
    kill taffybar exec and run `taffybar` (recompiles and runs)
    run '$successCmd' on success
    run '$failureCmd' on failure
    open a terminal with compilation errors on failure

  $0 --exec [ARG ARG ARG ..]
    kill taffybar exec and run:
      `$taffybarUserExec ARG ARG ARG ..` (no recompile)

  $0 -d|--daemon
    re-run as `daemon $0`

  $0 --exec-daemon
    re-run as `daemon $0 --exec`
";

sub main(@){
  my ($isUserExec, @userExecArgs);
  if(@_ == 1 and $_[0] =~ /^(-d|--daemon)$/){
    exec "daemon $0";
  }elsif(@_ > 0 and $_[0] =~ /^(--exec)$/){
    $isUserExec = 1;
    @userExecArgs = @_;
    shift @userExecArgs;
  }elsif(@_ == 0){
    $isUserExec = 0;
    @userExecArgs = ();
  }else{
    die $usage;
  }

  system "killall $execName 2>/dev/null";

  if($isUserExec){
    exec $taffybarUserExec, @userExecArgs;
  }

  my $log = "/tmp/taffybar-log-" . time;
  system "rm", "/tmp/taffybar-log-latest";
  system "ln", "-s", $log, "/tmp/taffybar-log-latest";

  my $ok = 1;
  open TB, "-|", "unbuffer taffybar 2>&1 | tee $log";
  my $line;
  while($line = <TB>){
    if($line =~ /^Error occurred while loading configuration file\.$/){
      $ok = 0;
      system $failureCmd;
    }elsif($line =~ /^Launching custom binary/ and $ok){
      system $successCmd;
    }
    print $line;
  }
  close TB;

  if(not $ok){
    system "term", "-r", "cat", $log;
  }
}

&main(@ARGV);
