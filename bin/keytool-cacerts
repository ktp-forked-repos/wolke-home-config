#!/usr/bin/perl
use strict;
use warnings;

sub addHostnameToCacertsFile($$);
sub ensureRoot();
sub run(@);

my $usage = "Usage: $0 HOSTNAME\n";

my $JVM_DIR = "/usr/lib/jvm";
my $CACERTS_PASS = "changeit";

sub main(@){
  die $usage if @_ > 0 and $_[0] =~ /^(-h|--help)$/;
  die $usage if @_ != 1;
  ensureRoot();
  my ($hostname) = @_;

  my @cacertsFiles = `find $JVM_DIR -name cacerts`;
  chomp foreach @cacertsFiles;

  for my $cacertsFile(@cacertsFiles){
    print "=======================\n";
    print "handling $cacertsFile\n";
    print "=======================\n";
    addHostnameToCacertsFile $hostname, $cacertsFile;
    print "\n\n\n";
  }
}

sub addHostnameToCacertsFile($$){
  my ($hostname, $cacertsFile) = @_;

  my $opensslCommand = "openssl s_client -connect $hostname:443 </dev/null";
  print "$opensslCommand\n";
  my $sslConnect = `$opensslCommand`;
  if($sslConnect !~ /(-----BEGIN CERTIFICATE-----\n.*-----END CERTIFICATE-----\n)/si){
    die "could not read certificate from openssl\n";
  }
  my $cert = $1;

  my $pemFilename = "keytool-$hostname.pem";
  $pemFilename =~ s/[^a-zA-Z0-9_\-]/_/g;
  $pemFilename =~ s/__+/_/g;

  my $pemFile = "/tmp/$pemFilename";

  open FH, "> $pemFile" or die "could not write $pemFile\n$!\n";
  print FH $cert;
  close FH;

  print "\n\n";
  run "keytool",
    "-keystore", $cacertsFile,
    "-storepass", $CACERTS_PASS,
    "-alias", $hostname,
    "-delete",
    ;

  print "\n\n";
  run "keytool",
    "-keystore", $cacertsFile,
    "-storepass", $CACERTS_PASS,
    "-alias", $hostname,
    "-file", $pemFile,
    "-noprompt",
    "-import",
    ;
}

sub ensureRoot(){
  if(`whoami` ne "root\n"){
    print STDERR "rerunning as root\n";
    exec "sudo", $0, @ARGV;
  }
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
