#!/usr/bin/perl
use strict;
use warnings;

my @exts = qw(
  jpg jpeg png gif
  avi m2ts mts mov mkv mpeg mpg
);
my $okExts = "(?:" . (join "|", @exts) . ")";

my $usage = "Usage:
  $0 SRC_DIR DEST_DIR
";

sub getInfo($);
sub run(@);

sub main(@){
  die $usage if @_ != 2 or not -d $_[0] or not -d $_[1];

  my ($srcDir, $destDir) = @_;
  $srcDir =~ s/\/$//;
  $destDir =~ s/\/$//;
  my @srcFiles = glob "$srcDir/*";
  for my $srcFile(@srcFiles){
    if(-f $srcFile){
      my ($fileName, $ext);
      if($srcFile =~ /^(?:.*\/)?(.+)\.($okExts)$/i){
        ($fileName, $ext) = ($1, $2);
      }else{
        die "$srcFile did not end in one of: @exts\n";
      }
      my $mtime = (stat $srcFile)[9];
      my $dateFmt = `date --date \@$mtime +'%Y%m%d_%H%M%S'`;
      chomp $dateFmt;

      $fileName =~ s/^${dateFmt}_(?:\d+_)?(.+)$/$1/;

      my $newFileName = "${dateFmt}_${fileName}.${ext}";
      my $count = 0;
      while(-f $newFileName and $fileName ne $newFileName){
        $count++;
        $newFileName = "${dateFmt}_${fileName}_${count}.${ext}";
      }
      my $destFile = "$destDir/$newFileName";
      if(not -e $destFile){
        run "cp", "-ar", "--reflink=auto", $srcFile, $destFile;
      }else{
        print "skipping $srcFile\n";
      }
      if(not -f $destFile){
        die "failed to copy: $srcFile\n";
      }
      my $srcInfo = getInfo $srcFile;
      my $destInfo = getInfo $destFile;
      if($$srcInfo{size} != $$destInfo{size}){
        die "FAILURE: mismatched filesize for $destFile\n";
      }
      if($$srcInfo{mtime} != $$destInfo{mtime}){
        die "FAILURE: mismatched mtime for $destFile\n";
      }
    }
  }
}

sub getInfo($){
  my ($file) = @_;
  my @stat = stat $file;
  return {size=>$stat[7], mtime=>$stat[9]};
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
