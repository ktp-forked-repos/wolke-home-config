#!/usr/bin/perl
use strict;
use warnings;

my $pcDefault = 'false';
my $debugPort = 8957;

my @opts = (
  "-Psdm",
  "-DskipTests",
  "-Dcheckstyle.skip=true",
  "-Dgwt.style=PRETTY",
);

sub run(@);

my $usage = "Usage:
  $0 [OPTS]

  OPTS:
    --super
      use goal gwt:run-codeserver, dont set gwt.superDevMode to false
    --debug
      use goal gwt:debug, set gwt.debugPort = $debugPort
    --legacy
      add -Pgwtdev
    --pc
    --nopc
      enable/disable precompile {default is pc=$pcDefault}
";

sub main(@){
  my $super = undef;
  my $legacy = undef;
  my $debug = undef;
  my $pc = $pcDefault;
  while(@_ > 0 and $_[0] =~ /^-/){
    my $arg = shift;
    if($arg =~ /^(--super)$/){
      $super = 1;
    }elsif($arg =~ /^(--debug)$/){
      $debug = 1;
    }elsif($arg =~ /^(--legacy)$/){
      $legacy = 1;
    }elsif($arg =~ /^(--pc)$/){
      $pc = 'true';
    }elsif($arg =~ /^(--nopc)$/){
      $pc = 'false';
    }else{
      die $usage;
    }
  }
  die $usage if @_ > 0;

  @opts = (@opts, "-Dgwt.codeServer.precompile=$pc");

  @opts = (@opts, "-Dgwt.superDevMode=false") if not defined $super;
  @opts = (@opts, "-Dgwt.debugPort=$debugPort") if defined $debug;
  @opts = (@opts, "-Pgwtdev") if defined $legacy;

  my $goal;
  if(defined $super){
    $goal = "gwt:run-codeserver";
  }elsif(defined $debug){
    $goal = "gwt:debug";
  }else{
    $goal = "gwt:run";
  }

  my @cmd = ("mvn", @opts, $goal);
  print "@cmd\n";

  open FH, "-|", @cmd;
  my $line;
  while($line = <FH>){
    if($line =~ /^\[INFO\]             \[ERROR\]/){
      print "\n\n";
    }
    print $line;
    if($line =~ /\d+\.\d+s total -- Compile completed|The code server is ready./){
      run "alarm", "-s", "success";
    }elsif($line =~ /Compiler returned false/){
      run "alarm", "-s", "failure";
    }elsif($line =~ /Code server for/){
      run "alarm", "-s", "success";
    }elsif($line =~ /Skipping exploding war file/){
      run "alarm", "-s", "success";
    }elsif($line =~ /buildstamp:/){
      run "alarm", "-s", "success";
    }
  }
  close FH;
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
